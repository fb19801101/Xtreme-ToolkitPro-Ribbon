<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <configSections>
    <section name="Log4Net" type="Log4Net.Config.Log4NetConfigurationSectionHandler,Log4Net"/>
  </configSections>
  <Log4Net>
    <logger name="logdebug">
      <!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF-->
      <!--比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录-->
      <!--如果没有定义LEVEL的值，则缺省为DEBUG-->
      <level value="DEBUG"/>
      <appender-ref ref="DebugAppender"/>
    </logger>
    <logger name="loginfo">
      <level value="INFO"/>
      <appender-ref ref="InfoAppender"/>
    </logger>
    <logger name="logwarn">
      <level value="WARN"/>
      <appender-ref ref="WarnAppender"/>
    </logger>
    <logger name="logerror">
      <level value="ERROR"/>
      <appender-ref ref="ErrorAppender"/>
    </logger>
    <logger name="logfatal">
      <level value="FATAL"/>
      <appender-ref ref="FatalAppender"/>
    </logger>
    <appender name="DebugAppender" type="Log4Net.Appender.RollingFileAppender">
      <!--日志文件名开头-->
      <file value="Log\\LogDebug\\"/>
      <!--多线程时采用最小锁定-->
      <lockingModel type="Log4Net.Appender.FileAppender+MinimalLock"/>
      <!--日志字体编码-->
      <encoding value="UTF-8"/>
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true"/>
      <!--日志文件名是否为静态-->
      <staticLogFileName value="false"/>
      <!--单个日志文件最大的大小-->
      <!--可用的单位:KB|MB|GB-->
      <maxFileSize value="10240"/>
      <!--变换的形式为日志大小-->
      <!--这种情况下MaxSizeRollBackups和maximumFileSize的节点设置才有意义-->
      <rollingStyle value="Size"/>
      <!--每天记录的日志文件个数，与maximumFileSize配合使用-->
      <maxSizeRollBackups value="10"/>
      <!--每个日志文件的最大大小-->
      <!--可用的单位:KB|MB|GB-->
      <!--不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="2048"/>
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <datePattern value="yyyyMMdd\\yyyyMMdd_HH&quot;.log&quot;"/>
      <!--yyyy-MM-dd\\可以让日志文件按天(每天一个文件夹)生成文件夹,  yyyy-MM-dd_HH 即可每小时生成一个日志文件-->
      <!--日志格式（向用户显示最后经过格式化的输出信息）-->
      <layout type="Log4Net.Layout.PatternLayout">
        <!--
        %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
        %n(newline):换行 
        %d(date time):输出当前语句运行的时刻 
        %r(runtime):输出程序从运行到执行到当前语句时消耗的毫秒数 
        %t(thread id):当前语句所在的线程ID 
        %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
        %c(class):当前日志对象的名称，例如：
        %L：输出语句所在的行号 
        %F：输出语句所在的文件名 
        %-数字：表示该项的最小长度，如果不够，则用空格填充
        -->
        <header value="[Header]"/>
        <footer value="[Footer]"/>
        <!--正文-->
        <conversionPattern value="调试时间：%d %n调试级别：%-5p  %n调试内容：%m%n%n"/>
      </layout>
    </appender>
    <appender name="InfoAppender" type="Log4Net.Appender.RollingFileAppender">
      <file value="Log\\LogInfo\\"/>
      <appendToFile value="true"/>
      <maxFileSize value="10240"/>
      <staticLogFileName value="false"/>
      <datePattern value="yyyyMMdd&quot;.log&quot;"/>
      <rollingStyle value="Date"/>
      <layout type="Log4Net.Layout.PatternLayout">
        <conversionPattern value="日志时间：%d %n日志级别：%-5p  %n日志内容：%m%n%n"/>
      </layout>
    </appender>
    <appender name="WarnAppender" type="Log4Net.Appender.RollingFileAppender">
      <file value="Log\\LogWarn\\"/>
      <appendToFile value="true"/>
      <maxFileSize value="10240"/>
      <staticLogFileName value="false"/>
      <datePattern value="yyyyMMdd&quot;.log&quot;"/>
      <rollingStyle value="Date"/>
      <layout type="Log4Net.Layout.PatternLayout">
        <conversionPattern value="警告时间：%d %n警告级别：%-5p  %n警告内容：%m%n%n"/>
      </layout>
    </appender>
    <appender name="ErrorAppender" type="Log4Net.Appender.RollingFileAppender">
      <param name="File" value="Log\\LogError\\"/>
      <appendToFile value="true"/>
      <maxFileSize value="10240"/>
      <staticLogFileName value="false"/>
      <datePattern value="yyyyMMdd&quot;.log&quot;"/>
      <rollingStyle value="Date"/>
      <layout type="Log4Net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%n错误时间：%d %n错误级别：%-5p%n错误内容：%m%n"/>
      </layout>
    </appender>
    <!--
    File 节点中规定了文件要写入到什么目录中，上例中的“Log\\LogError\\”代表写入到“程序输入目录（Debug目录）\Log\LogError\”文件夹中。
    AppendToFile 节点规定了是否覆写到文件中。假设我们已经有了一个20131028.htm日志文件，当为true的时候，日志文件会附加到这个文件上。为false的时候，Log4Net会先将原来的日志文件备份，生成一个新的日志文件（见下图）。
    LockingModel 节点规定了多线程时采用最小锁定
    MaxFileSize 最大的文件大小。我们可以使用"KB", "MB" 或 "GB"为 MaxFileSize 作为后缀限定大小。默认的文件大小是10240。
    RollingStyle 是文件创建的方式。上例中市设置为以Date方式创建新文件。
    DatePattern 日期格式，当我们设置了RollingStyle 为Date方式后，Log4Net会自动使用DatePattern 中的日期格式来创建新的日志文件。
    MaxSizeRollBackups 这个属性用来设置，当日志文件达到MaxFileSize大小，就自动创建备份文件。备份文件的多少由MaxSizeRollBackups决定。比如说，我们是以日期格式作为日志文件名的，假设今天是2013-10-28，那么今天创建的日志文件名就是20131028.htm,当这个文件中要超过MaxFileSize的时候，Log4Net就自动将老的20131028.htm改名为20131028.htm.1，并创建一个新的20131028.htm文件。
    StaticLogFileName 是否采用静态文件名。因为我们这个例子是采用以日期作为文件名，每天的日志文件的名字都是动态的，所以上例中为false。如果采用静态文件名，那么日志文件的名字就是唯一确定的。可以参考下面的配置文件进行设置。下面的配置文件中就是采用静态文件名，生成的日志文件名都是log.txt。
    -->
    <appender name="FatalAppender" type="Log4Net.Appender.RollingFileAppender">
      <file value="Log\\LogFatal\\"/>
      <appendToFile value="true"/>
      <maxFileSize value="10240"/>
      <staticLogFileName value="false"/>
      <datePattern value="yyyyMMdd&quot;.log&quot;"/>
      <rollingStyle value="Date"/>
      <layout type="Log4Net.Layout.PatternLayout">
        <conversionPattern value="%n失败时间：%d %n失败级别：%-5p%n失败内容：%m%n"/>
      </layout>
    </appender>
  </Log4Net>
</configuration>


